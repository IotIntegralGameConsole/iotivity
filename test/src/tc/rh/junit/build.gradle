/******************************************************************
 *
 * Copyright 2016 Samsung Electronics All Rights Reserved.
 *
 *
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 ******************************************************************/

apply from: "../../../../build/android/build.gradle"

project.buildDir = "${binDirectory}/rh"
def rhSoFileDir = "${iotivityRootDirectoryFromModules}/service/resource-hosting/android/resource_hosting/libs"
def rhJarFileDir= "${secTestRootDirectoryFromModules}/extlibs/android/rh"

buildscript {
    repositories { 
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.5.0'
    }
}

repositories {
        flatDir{
                dirs "${baseAARFileDirFromModules}"
        }
}

apply plugin: 'com.android.application'

android {
    compileSdkVersion  21
    buildToolsVersion "21.1.2"
     
    sourceSets {
      
        main {
              manifest.srcFile 'AndroidManifest.xml'
              java.srcDirs 'src'
              jniLibs.srcDir "${rhSoFileDir}"
              jni.srcDirs = [] //disable automatic ndk-build 
        }
    }

    lintOptions {
          abortOnError false
     }

    defaultConfig {
      applicationId "org.iotivity.service.rh.test"
      minSdkVersion 21
      targetSdkVersion 21
    }
    println ("\nConfigured $commonText android properties")
}

dependencies {
    compile fileTree(dir: "${androidLibFileDirFromModules}", include: ['*.jar'])
    compile(name:"${baseAARFile}", ext:'aar')
    compile fileTree(dir:"${rhJarFileDir}", include: ['*.jar'])
    println ("\n$commonText Library Dependency Resolved")         
}

task rhbuild (dependsOn:['deleteBuildDirectory', 'installDebug']) << {
   println ("\n############# Finished $commonText #############\n")
}

task deleteBuildDirectory(type: Delete) {
    delete project.buildDir
}

