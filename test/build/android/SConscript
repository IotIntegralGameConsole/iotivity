'''
/******************************************************************
*
* Copyright 2016 Samsung Electronics All Rights Reserved.
*
*
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*
******************************************************************/
'''
##
# The build script for Android
#
##

import os
import os.path

print '\n---------------Started Building IotivitySecTest for Android---------------\n'

Import('env_android')

target_arch = env_android.get('TARGET_ARCH')
target_service = env_android.get('TARGET_SERVICE')
target_test = env_android.get('TARGET_TEST')
target_framework = env_android.get('TARGET_FRAMEWORK')
variant_dir = env_android.get('VARIANT_DIR')
rpm_path = env_android.get('RPMS_DIR')
is_prevent_enabled = env_android.get('PREVENT')
target_transport = ARGUMENTS.get('TARGET_TRANSPORT')
target_secured = env_android.get('SECURED')
gradle_bin = env_android.get('ANDROID_GRADLE')
ndk_dir = env_android.get('ANDROID_NDK')
sdk_dir = env_android.get('ANDROID_HOME')
push = env_android.get('PUSH')

print ('ndk_path: ' + ndk_dir)

if push == True:
    push = '1'
else:
    push = '0'

print 'push: ' + str(push)

if env_android.get('RELEASE'):
    RELEASE_DIR='release'
else:
    RELEASE_DIR='debug'

PROJECT_HOME = '../..'

default_targets = []

if 'iut' in target_service or 'all' in target_service:
    
    security_mode = env_android.get('SECURITY_MODE')
    print('security_mode: ' + security_mode)
        
    native_script = "bash build/android/iut/native_build.sh stand_alone=false ndk_path=%s push=%s security_mode=%s" % (ndk_dir, push, security_mode)
    
    default_targets += [native_script]
    
    native_build = env_android.Command('native_build', None, default_targets)

    env_android.Default(native_build)

if 'ca' in target_service or 'all' in target_service:

    os.environ['ANDROID_HOME'] = env_android.get('ANDROID_HOME')
    jdk_env = Environment(ENV=os.environ)

    CURRENT_PATH = Dir('.').srcnode().abspath

    if 'gtest' in target_framework or 'all' in target_framework:
        cagtest_build_script = "bash build/android/ca/gtest/native_build.sh clean=false push=%s android_home=%s android_ndk=%s release=%s stand_alone=false" % (push, sdk_dir, ndk_dir, RELEASE_DIR)
        cagtest_native_build = env_android.Command('cagtest_native_build', None, cagtest_build_script)
        default_targets += cagtest_native_build

    if 'junit' in target_framework or 'all' in target_framework:

        if 'tc' in target_test or 'all' in target_test:
            jdk_env['BUILDERS']['Gradle'] = Builder(action = gradle_bin + ' ca -b' + CURRENT_PATH + '/build.gradle -Pm=%s -Pp=%s/ --continue' %(RELEASE_DIR, CURRENT_PATH))
            cajunit_gradle_build = jdk_env.Gradle(target=CURRENT_PATH + '/../../bin/android/ca/outputs/apk/catest-debug.apk', source=CURRENT_PATH + '/../../src/tc/ca/junit/build.gradle')
            default_targets += cajunit_gradle_build

            casimulator_build_script = "bash build/android/ca/junit/native_build.sh type=simulator android_ndk=%s stand_alone=false" % (ndk_dir)
            casimuator_native_build = env_android.Command('casimulator_native_build', None, casimulator_build_script)
            default_targets += casimuator_native_build

        if 'app' in target_test or 'all' in target_test:
            jdk_env['BUILDERS']['Gradle'] = Builder(action = gradle_bin + ' build -b' + CURRENT_PATH + '/../../src/testapp/ca/android/casimulator/build.gradle -PTARGET_ARCH=%s -PRELEASE=%s -PANDROID_NDK=%s' %(target_arch, RELEASE_DIR, ndk_dir))
            casimulator_gradle_build = jdk_env.Gradle(target=CURRENT_PATH + '/../../src/testapp/ca/android/casimulator/build/outputs/apk/casimulator-debug.apk', source=CURRENT_PATH + '/../../src/testapp/ca/android/casimulator/build.gradle')
            default_targets += casimulator_gradle_build

env_android.Default(default_targets)
