#******************************************************************
#
# Copyright 2017 Intel Mobile Communications GmbH All Rights Reserved.
#
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
##
# Bridging build script
##

import os.path

Import('env')

target_os = env.get('TARGET_OS')
build_sample = 'ON'
src_dir = env.get('SRC_DIR')

# rapidjson fetch
SConscript('#extlibs/rapidjson/SConscript')

if target_os not in [
    'android', 'arduino', 'darwin', 'ios', 'tizen', 'msys_nt', 'windows']:

    SConscript('common/SConscript')

    SConscript('mini_plugin_manager/SConscript')

    SConscript('mpm_client/SConscript')

    SConscript('plugins/lifx_plugin/SConscript')

    SConscript('plugins/hue_plugin/SConscript')

    SConscript('plugins/nest_plugin/SConscript')

    SConscript('plugins/lyric_plugin/SConscript')

    env.UserInstallTargetHeader('#/bridging/include/ConcurrentIotivityUtils.h', 'bridging', 'ConcurrentIotivityUtils.h')
    env.UserInstallTargetHeader('#/bridging/include/curlClient.h', 'bridging', 'curlClient.h')
    env.UserInstallTargetHeader('#/bridging/include/IotivityWorkItem.h', 'bridging', 'IotivityWorkItem.h')
    env.UserInstallTargetHeader('#/bridging/include/JsonHelper.h', 'bridging', 'JsonHelper.h')
    env.UserInstallTargetHeader('#/bridging/include/messageHandler.h', 'bridging', 'messageHandler.h')
    env.UserInstallTargetHeader('#/bridging/include/mpmErrorCode.h', 'bridging', 'mpmErrorCode.h')
    env.UserInstallTargetHeader('#/bridging/include/pluginIf.h', 'bridging', 'pluginIf.h')
    env.UserInstallTargetHeader('#/bridging/include/pluginServer.h', 'bridging', 'pluginServer.h')
    env.UserInstallTargetHeader('#/bridging/include/WorkQueue.h', 'bridging', 'WorkQueue.h')
